{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":1481789,"sourceType":"datasetVersion","datasetId":869651}],"dockerImageVersionId":30761,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-08-29T23:02:24.135893Z","iopub.execute_input":"2024-08-29T23:02:24.136378Z","iopub.status.idle":"2024-08-29T23:02:24.688229Z","shell.execute_reply.started":"2024-08-29T23:02:24.136335Z","shell.execute_reply":"2024-08-29T23:02:24.686699Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"/kaggle/input/credit-card-customer-churn-prediction/Churn_Modelling.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"df= pd.read_csv(\"/kaggle/input/credit-card-customer-churn-prediction/Churn_Modelling.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-08-29T23:49:07.555471Z","iopub.execute_input":"2024-08-29T23:49:07.556007Z","iopub.status.idle":"2024-08-29T23:49:07.601866Z","shell.execute_reply.started":"2024-08-29T23:49:07.555955Z","shell.execute_reply":"2024-08-29T23:49:07.600699Z"},"trusted":true},"execution_count":58,"outputs":[]},{"cell_type":"code","source":"df.head(10)","metadata":{"execution":{"iopub.status.busy":"2024-08-29T23:49:07.846662Z","iopub.execute_input":"2024-08-29T23:49:07.847207Z","iopub.status.idle":"2024-08-29T23:49:07.873149Z","shell.execute_reply.started":"2024-08-29T23:49:07.847159Z","shell.execute_reply":"2024-08-29T23:49:07.871831Z"},"trusted":true},"execution_count":59,"outputs":[{"execution_count":59,"output_type":"execute_result","data":{"text/plain":"   RowNumber  CustomerId   Surname  CreditScore Geography  Gender  Age  \\\n0          1    15634602  Hargrave          619    France  Female   42   \n1          2    15647311      Hill          608     Spain  Female   41   \n2          3    15619304      Onio          502    France  Female   42   \n3          4    15701354      Boni          699    France  Female   39   \n4          5    15737888  Mitchell          850     Spain  Female   43   \n5          6    15574012       Chu          645     Spain    Male   44   \n6          7    15592531  Bartlett          822    France    Male   50   \n7          8    15656148    Obinna          376   Germany  Female   29   \n8          9    15792365        He          501    France    Male   44   \n9         10    15592389        H?          684    France    Male   27   \n\n   Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n0       2       0.00              1          1               1   \n1       1   83807.86              1          0               1   \n2       8  159660.80              3          1               0   \n3       1       0.00              2          0               0   \n4       2  125510.82              1          1               1   \n5       8  113755.78              2          1               0   \n6       7       0.00              2          1               1   \n7       4  115046.74              4          1               0   \n8       4  142051.07              2          0               1   \n9       2  134603.88              1          1               1   \n\n   EstimatedSalary  Exited  \n0        101348.88       1  \n1        112542.58       0  \n2        113931.57       1  \n3         93826.63       0  \n4         79084.10       0  \n5        149756.71       1  \n6         10062.80       0  \n7        119346.88       1  \n8         74940.50       0  \n9         71725.73       0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>RowNumber</th>\n      <th>CustomerId</th>\n      <th>Surname</th>\n      <th>CreditScore</th>\n      <th>Geography</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>Exited</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>15634602</td>\n      <td>Hargrave</td>\n      <td>619</td>\n      <td>France</td>\n      <td>Female</td>\n      <td>42</td>\n      <td>2</td>\n      <td>0.00</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>101348.88</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>15647311</td>\n      <td>Hill</td>\n      <td>608</td>\n      <td>Spain</td>\n      <td>Female</td>\n      <td>41</td>\n      <td>1</td>\n      <td>83807.86</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>112542.58</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>15619304</td>\n      <td>Onio</td>\n      <td>502</td>\n      <td>France</td>\n      <td>Female</td>\n      <td>42</td>\n      <td>8</td>\n      <td>159660.80</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113931.57</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>15701354</td>\n      <td>Boni</td>\n      <td>699</td>\n      <td>France</td>\n      <td>Female</td>\n      <td>39</td>\n      <td>1</td>\n      <td>0.00</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>93826.63</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>15737888</td>\n      <td>Mitchell</td>\n      <td>850</td>\n      <td>Spain</td>\n      <td>Female</td>\n      <td>43</td>\n      <td>2</td>\n      <td>125510.82</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>79084.10</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>6</td>\n      <td>15574012</td>\n      <td>Chu</td>\n      <td>645</td>\n      <td>Spain</td>\n      <td>Male</td>\n      <td>44</td>\n      <td>8</td>\n      <td>113755.78</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>149756.71</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>7</td>\n      <td>15592531</td>\n      <td>Bartlett</td>\n      <td>822</td>\n      <td>France</td>\n      <td>Male</td>\n      <td>50</td>\n      <td>7</td>\n      <td>0.00</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>10062.80</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>8</td>\n      <td>15656148</td>\n      <td>Obinna</td>\n      <td>376</td>\n      <td>Germany</td>\n      <td>Female</td>\n      <td>29</td>\n      <td>4</td>\n      <td>115046.74</td>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>119346.88</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>9</td>\n      <td>15792365</td>\n      <td>He</td>\n      <td>501</td>\n      <td>France</td>\n      <td>Male</td>\n      <td>44</td>\n      <td>4</td>\n      <td>142051.07</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>74940.50</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>10</td>\n      <td>15592389</td>\n      <td>H?</td>\n      <td>684</td>\n      <td>France</td>\n      <td>Male</td>\n      <td>27</td>\n      <td>2</td>\n      <td>134603.88</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>71725.73</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-29T23:49:08.058734Z","iopub.execute_input":"2024-08-29T23:49:08.059587Z","iopub.status.idle":"2024-08-29T23:49:08.067806Z","shell.execute_reply.started":"2024-08-29T23:49:08.059533Z","shell.execute_reply":"2024-08-29T23:49:08.066428Z"},"trusted":true},"execution_count":60,"outputs":[{"execution_count":60,"output_type":"execute_result","data":{"text/plain":"(10000, 14)"},"metadata":{}}]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-08-29T23:49:08.254651Z","iopub.execute_input":"2024-08-29T23:49:08.255160Z","iopub.status.idle":"2024-08-29T23:49:08.274822Z","shell.execute_reply.started":"2024-08-29T23:49:08.255118Z","shell.execute_reply":"2024-08-29T23:49:08.273417Z"},"trusted":true},"execution_count":61,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 10000 entries, 0 to 9999\nData columns (total 14 columns):\n #   Column           Non-Null Count  Dtype  \n---  ------           --------------  -----  \n 0   RowNumber        10000 non-null  int64  \n 1   CustomerId       10000 non-null  int64  \n 2   Surname          10000 non-null  object \n 3   CreditScore      10000 non-null  int64  \n 4   Geography        10000 non-null  object \n 5   Gender           10000 non-null  object \n 6   Age              10000 non-null  int64  \n 7   Tenure           10000 non-null  int64  \n 8   Balance          10000 non-null  float64\n 9   NumOfProducts    10000 non-null  int64  \n 10  HasCrCard        10000 non-null  int64  \n 11  IsActiveMember   10000 non-null  int64  \n 12  EstimatedSalary  10000 non-null  float64\n 13  Exited           10000 non-null  int64  \ndtypes: float64(2), int64(9), object(3)\nmemory usage: 1.1+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"df.duplicated().sum()","metadata":{"execution":{"iopub.status.busy":"2024-08-29T23:49:08.389549Z","iopub.execute_input":"2024-08-29T23:49:08.390132Z","iopub.status.idle":"2024-08-29T23:49:08.410133Z","shell.execute_reply.started":"2024-08-29T23:49:08.390079Z","shell.execute_reply":"2024-08-29T23:49:08.408838Z"},"trusted":true},"execution_count":62,"outputs":[{"execution_count":62,"output_type":"execute_result","data":{"text/plain":"0"},"metadata":{}}]},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-08-29T23:49:08.575775Z","iopub.execute_input":"2024-08-29T23:49:08.576881Z","iopub.status.idle":"2024-08-29T23:49:08.590971Z","shell.execute_reply.started":"2024-08-29T23:49:08.576822Z","shell.execute_reply":"2024-08-29T23:49:08.589566Z"},"trusted":true},"execution_count":63,"outputs":[{"execution_count":63,"output_type":"execute_result","data":{"text/plain":"RowNumber          0\nCustomerId         0\nSurname            0\nCreditScore        0\nGeography          0\nGender             0\nAge                0\nTenure             0\nBalance            0\nNumOfProducts      0\nHasCrCard          0\nIsActiveMember     0\nEstimatedSalary    0\nExited             0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df['Exited'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-08-29T23:49:08.750049Z","iopub.execute_input":"2024-08-29T23:49:08.750676Z","iopub.status.idle":"2024-08-29T23:49:08.761078Z","shell.execute_reply.started":"2024-08-29T23:49:08.750593Z","shell.execute_reply":"2024-08-29T23:49:08.759803Z"},"trusted":true},"execution_count":64,"outputs":[{"execution_count":64,"output_type":"execute_result","data":{"text/plain":"Exited\n0    7963\n1    2037\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df['Geography'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-08-29T23:49:08.917886Z","iopub.execute_input":"2024-08-29T23:49:08.918448Z","iopub.status.idle":"2024-08-29T23:49:08.930362Z","shell.execute_reply.started":"2024-08-29T23:49:08.918392Z","shell.execute_reply":"2024-08-29T23:49:08.929137Z"},"trusted":true},"execution_count":65,"outputs":[{"execution_count":65,"output_type":"execute_result","data":{"text/plain":"Geography\nFrance     5014\nGermany    2509\nSpain      2477\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df['Gender'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-08-29T23:49:09.107428Z","iopub.execute_input":"2024-08-29T23:49:09.107941Z","iopub.status.idle":"2024-08-29T23:49:09.119963Z","shell.execute_reply.started":"2024-08-29T23:49:09.107897Z","shell.execute_reply":"2024-08-29T23:49:09.118571Z"},"trusted":true},"execution_count":66,"outputs":[{"execution_count":66,"output_type":"execute_result","data":{"text/plain":"Gender\nMale      5457\nFemale    4543\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df.drop(columns=['RowNumber','CustomerId','Surname'], inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-08-29T23:49:09.537566Z","iopub.execute_input":"2024-08-29T23:49:09.538105Z","iopub.status.idle":"2024-08-29T23:49:09.546482Z","shell.execute_reply.started":"2024-08-29T23:49:09.538053Z","shell.execute_reply":"2024-08-29T23:49:09.545217Z"},"trusted":true},"execution_count":67,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-29T23:49:10.121881Z","iopub.execute_input":"2024-08-29T23:49:10.123125Z","iopub.status.idle":"2024-08-29T23:49:10.140888Z","shell.execute_reply.started":"2024-08-29T23:49:10.123061Z","shell.execute_reply":"2024-08-29T23:49:10.139692Z"},"trusted":true},"execution_count":68,"outputs":[{"execution_count":68,"output_type":"execute_result","data":{"text/plain":"   CreditScore Geography  Gender  Age  Tenure    Balance  NumOfProducts  \\\n0          619    France  Female   42       2       0.00              1   \n1          608     Spain  Female   41       1   83807.86              1   \n2          502    France  Female   42       8  159660.80              3   \n3          699    France  Female   39       1       0.00              2   \n4          850     Spain  Female   43       2  125510.82              1   \n\n   HasCrCard  IsActiveMember  EstimatedSalary  Exited  \n0          1               1        101348.88       1  \n1          0               1        112542.58       0  \n2          1               0        113931.57       1  \n3          0               0         93826.63       0  \n4          1               1         79084.10       0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>CreditScore</th>\n      <th>Geography</th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>Exited</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>619</td>\n      <td>France</td>\n      <td>Female</td>\n      <td>42</td>\n      <td>2</td>\n      <td>0.00</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>101348.88</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>608</td>\n      <td>Spain</td>\n      <td>Female</td>\n      <td>41</td>\n      <td>1</td>\n      <td>83807.86</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>112542.58</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>502</td>\n      <td>France</td>\n      <td>Female</td>\n      <td>42</td>\n      <td>8</td>\n      <td>159660.80</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113931.57</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>699</td>\n      <td>France</td>\n      <td>Female</td>\n      <td>39</td>\n      <td>1</td>\n      <td>0.00</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>93826.63</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>850</td>\n      <td>Spain</td>\n      <td>Female</td>\n      <td>43</td>\n      <td>2</td>\n      <td>125510.82</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>79084.10</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df=pd.get_dummies(df,columns=['Geography','Gender'], drop_first=True)","metadata":{"execution":{"iopub.status.busy":"2024-08-29T23:49:11.129683Z","iopub.execute_input":"2024-08-29T23:49:11.130256Z","iopub.status.idle":"2024-08-29T23:49:11.147448Z","shell.execute_reply.started":"2024-08-29T23:49:11.130170Z","shell.execute_reply":"2024-08-29T23:49:11.145928Z"},"trusted":true},"execution_count":69,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-29T23:49:11.879972Z","iopub.execute_input":"2024-08-29T23:49:11.880991Z","iopub.status.idle":"2024-08-29T23:49:11.902039Z","shell.execute_reply.started":"2024-08-29T23:49:11.880935Z","shell.execute_reply":"2024-08-29T23:49:11.900675Z"},"trusted":true},"execution_count":70,"outputs":[{"execution_count":70,"output_type":"execute_result","data":{"text/plain":"   CreditScore  Age  Tenure    Balance  NumOfProducts  HasCrCard  \\\n0          619   42       2       0.00              1          1   \n1          608   41       1   83807.86              1          0   \n2          502   42       8  159660.80              3          1   \n3          699   39       1       0.00              2          0   \n4          850   43       2  125510.82              1          1   \n\n   IsActiveMember  EstimatedSalary  Exited  Geography_Germany  \\\n0               1        101348.88       1              False   \n1               1        112542.58       0              False   \n2               0        113931.57       1              False   \n3               0         93826.63       0              False   \n4               1         79084.10       0              False   \n\n   Geography_Spain  Gender_Male  \n0            False        False  \n1             True        False  \n2            False        False  \n3            False        False  \n4             True        False  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>CreditScore</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>Exited</th>\n      <th>Geography_Germany</th>\n      <th>Geography_Spain</th>\n      <th>Gender_Male</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>619</td>\n      <td>42</td>\n      <td>2</td>\n      <td>0.00</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>101348.88</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>608</td>\n      <td>41</td>\n      <td>1</td>\n      <td>83807.86</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>112542.58</td>\n      <td>0</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>502</td>\n      <td>42</td>\n      <td>8</td>\n      <td>159660.80</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113931.57</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>699</td>\n      <td>39</td>\n      <td>1</td>\n      <td>0.00</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>93826.63</td>\n      <td>0</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>850</td>\n      <td>43</td>\n      <td>2</td>\n      <td>125510.82</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>79084.10</td>\n      <td>0</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"X= df.drop(columns='Exited')\ny= df['Exited']\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test= train_test_split(X,y, test_size=0.2, random_state= 1)","metadata":{"execution":{"iopub.status.busy":"2024-08-29T23:52:08.880170Z","iopub.execute_input":"2024-08-29T23:52:08.880695Z","iopub.status.idle":"2024-08-29T23:52:08.893891Z","shell.execute_reply.started":"2024-08-29T23:52:08.880637Z","shell.execute_reply":"2024-08-29T23:52:08.892664Z"},"trusted":true},"execution_count":88,"outputs":[]},{"cell_type":"code","source":"X","metadata":{"execution":{"iopub.status.busy":"2024-08-29T23:52:13.149886Z","iopub.execute_input":"2024-08-29T23:52:13.150887Z","iopub.status.idle":"2024-08-29T23:52:13.174570Z","shell.execute_reply.started":"2024-08-29T23:52:13.150834Z","shell.execute_reply":"2024-08-29T23:52:13.173076Z"},"trusted":true},"execution_count":89,"outputs":[{"execution_count":89,"output_type":"execute_result","data":{"text/plain":"      CreditScore  Age  Tenure    Balance  NumOfProducts  HasCrCard  \\\n0             619   42       2       0.00              1          1   \n1             608   41       1   83807.86              1          0   \n2             502   42       8  159660.80              3          1   \n3             699   39       1       0.00              2          0   \n4             850   43       2  125510.82              1          1   \n...           ...  ...     ...        ...            ...        ...   \n9995          771   39       5       0.00              2          1   \n9996          516   35      10   57369.61              1          1   \n9997          709   36       7       0.00              1          0   \n9998          772   42       3   75075.31              2          1   \n9999          792   28       4  130142.79              1          1   \n\n      IsActiveMember  EstimatedSalary  Geography_Germany  Geography_Spain  \\\n0                  1        101348.88              False            False   \n1                  1        112542.58              False             True   \n2                  0        113931.57              False            False   \n3                  0         93826.63              False            False   \n4                  1         79084.10              False             True   \n...              ...              ...                ...              ...   \n9995               0         96270.64              False            False   \n9996               1        101699.77              False            False   \n9997               1         42085.58              False            False   \n9998               0         92888.52               True            False   \n9999               0         38190.78              False            False   \n\n      Gender_Male  \n0           False  \n1           False  \n2           False  \n3           False  \n4           False  \n...           ...  \n9995         True  \n9996         True  \n9997        False  \n9998         True  \n9999        False  \n\n[10000 rows x 11 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>CreditScore</th>\n      <th>Age</th>\n      <th>Tenure</th>\n      <th>Balance</th>\n      <th>NumOfProducts</th>\n      <th>HasCrCard</th>\n      <th>IsActiveMember</th>\n      <th>EstimatedSalary</th>\n      <th>Geography_Germany</th>\n      <th>Geography_Spain</th>\n      <th>Gender_Male</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>619</td>\n      <td>42</td>\n      <td>2</td>\n      <td>0.00</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>101348.88</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>608</td>\n      <td>41</td>\n      <td>1</td>\n      <td>83807.86</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>112542.58</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>502</td>\n      <td>42</td>\n      <td>8</td>\n      <td>159660.80</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113931.57</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>699</td>\n      <td>39</td>\n      <td>1</td>\n      <td>0.00</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>93826.63</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>850</td>\n      <td>43</td>\n      <td>2</td>\n      <td>125510.82</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>79084.10</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>9995</th>\n      <td>771</td>\n      <td>39</td>\n      <td>5</td>\n      <td>0.00</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>96270.64</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>9996</th>\n      <td>516</td>\n      <td>35</td>\n      <td>10</td>\n      <td>57369.61</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>101699.77</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>9997</th>\n      <td>709</td>\n      <td>36</td>\n      <td>7</td>\n      <td>0.00</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>42085.58</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>9998</th>\n      <td>772</td>\n      <td>42</td>\n      <td>3</td>\n      <td>75075.31</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>92888.52</td>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>9999</th>\n      <td>792</td>\n      <td>28</td>\n      <td>4</td>\n      <td>130142.79</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>38190.78</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n<p>10000 rows × 11 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"y","metadata":{"execution":{"iopub.status.busy":"2024-08-29T23:52:15.155544Z","iopub.execute_input":"2024-08-29T23:52:15.156112Z","iopub.status.idle":"2024-08-29T23:52:15.167006Z","shell.execute_reply.started":"2024-08-29T23:52:15.156063Z","shell.execute_reply":"2024-08-29T23:52:15.165691Z"},"trusted":true},"execution_count":90,"outputs":[{"execution_count":90,"output_type":"execute_result","data":{"text/plain":"0       1\n1       0\n2       1\n3       0\n4       0\n       ..\n9995    0\n9996    0\n9997    1\n9998    1\n9999    0\nName: Exited, Length: 10000, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"Y_test.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-29T23:52:18.642980Z","iopub.execute_input":"2024-08-29T23:52:18.643550Z","iopub.status.idle":"2024-08-29T23:52:18.652361Z","shell.execute_reply.started":"2024-08-29T23:52:18.643499Z","shell.execute_reply":"2024-08-29T23:52:18.650963Z"},"trusted":true},"execution_count":91,"outputs":[{"execution_count":91,"output_type":"execute_result","data":{"text/plain":"(2000,)"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.preprocessing import StandardScaler\nscaler= StandardScaler()\n\nX_train_scaled = scaler.fit_transform(X_train)\n\nX_test_scaled=  scaler.transform(X_test)\n\n\n","metadata":{"execution":{"iopub.status.busy":"2024-08-29T23:52:47.473901Z","iopub.execute_input":"2024-08-29T23:52:47.474485Z","iopub.status.idle":"2024-08-29T23:52:47.499072Z","shell.execute_reply.started":"2024-08-29T23:52:47.474433Z","shell.execute_reply":"2024-08-29T23:52:47.497485Z"},"trusted":true},"execution_count":93,"outputs":[]},{"cell_type":"code","source":"X_train_scaled","metadata":{"execution":{"iopub.status.busy":"2024-08-29T23:52:48.110867Z","iopub.execute_input":"2024-08-29T23:52:48.111405Z","iopub.status.idle":"2024-08-29T23:52:48.121669Z","shell.execute_reply.started":"2024-08-29T23:52:48.111358Z","shell.execute_reply":"2024-08-29T23:52:48.120094Z"},"trusted":true},"execution_count":94,"outputs":[{"execution_count":94,"output_type":"execute_result","data":{"text/plain":"array([[-0.23082038, -0.94449979, -0.70174202, ...,  1.71490137,\n        -0.57273139,  0.91509065],\n       [-0.25150912, -0.94449979, -0.35520275, ..., -0.58312392,\n        -0.57273139, -1.09278791],\n       [-0.3963303 ,  0.77498705,  0.33787579, ...,  1.71490137,\n        -0.57273139, -1.09278791],\n       ...,\n       [ 0.22433188,  0.58393295,  1.3774936 , ..., -0.58312392,\n        -0.57273139, -1.09278791],\n       [ 0.13123255,  0.01077067,  1.03095433, ..., -0.58312392,\n        -0.57273139, -1.09278791],\n       [ 1.1656695 ,  0.29735181,  0.33787579, ...,  1.71490137,\n        -0.57273139,  0.91509065]])"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import tensorflow\nfrom tensorflow import keras\nfrom tensorflow.keras import Sequential\nfrom tensorflow.keras.layers import Dense\n\n\n","metadata":{"execution":{"iopub.status.busy":"2024-08-29T23:53:05.644402Z","iopub.execute_input":"2024-08-29T23:53:05.644962Z","iopub.status.idle":"2024-08-29T23:53:05.651419Z","shell.execute_reply.started":"2024-08-29T23:53:05.644910Z","shell.execute_reply":"2024-08-29T23:53:05.650121Z"},"trusted":true},"execution_count":95,"outputs":[]},{"cell_type":"code","source":"model= Sequential()\n\nmodel.add(Dense(4, activation= \"relu\",input_dim= 11))\nmodel.add(Dense(1, activation=\"sigmoid\"))\n","metadata":{"execution":{"iopub.status.busy":"2024-08-30T00:00:38.972826Z","iopub.execute_input":"2024-08-30T00:00:38.973751Z","iopub.status.idle":"2024-08-30T00:00:39.010890Z","shell.execute_reply.started":"2024-08-30T00:00:38.973690Z","shell.execute_reply":"2024-08-30T00:00:39.009670Z"},"trusted":true},"execution_count":120,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"}]},{"cell_type":"code","source":"model.summary()","metadata":{"execution":{"iopub.status.busy":"2024-08-30T00:00:40.658759Z","iopub.execute_input":"2024-08-30T00:00:40.659294Z","iopub.status.idle":"2024-08-30T00:00:40.681505Z","shell.execute_reply.started":"2024-08-30T00:00:40.659244Z","shell.execute_reply":"2024-08-30T00:00:40.680214Z"},"trusted":true},"execution_count":121,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential_6\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_6\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ dense_11 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m4\u001b[0m)              │            \u001b[38;5;34m48\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_12 (\u001b[38;5;33mDense\u001b[0m)                │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │             \u001b[38;5;34m5\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ dense_11 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">4</span>)              │            <span style=\"color: #00af00; text-decoration-color: #00af00\">48</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_12 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │             <span style=\"color: #00af00; text-decoration-color: #00af00\">5</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m53\u001b[0m (212.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">53</span> (212.00 B)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m53\u001b[0m (212.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">53</span> (212.00 B)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}]},{"cell_type":"code","source":"model.compile(loss= 'binary_crossentropy', optimizer= 'Adam', metrics=[\"accuracy\"])","metadata":{"execution":{"iopub.status.busy":"2024-08-30T00:03:24.363914Z","iopub.execute_input":"2024-08-30T00:03:24.365116Z","iopub.status.idle":"2024-08-30T00:03:24.378317Z","shell.execute_reply.started":"2024-08-30T00:03:24.365057Z","shell.execute_reply":"2024-08-30T00:03:24.377033Z"},"trusted":true},"execution_count":128,"outputs":[]},{"cell_type":"code","source":"history= model.fit(X_train_scaled,Y_train,epochs=10, validation_split= 0.2)","metadata":{"execution":{"iopub.status.busy":"2024-08-30T00:11:20.581328Z","iopub.execute_input":"2024-08-30T00:11:20.582556Z","iopub.status.idle":"2024-08-30T00:11:24.718799Z","shell.execute_reply.started":"2024-08-30T00:11:20.582495Z","shell.execute_reply":"2024-08-30T00:11:24.717584Z"},"trusted":true},"execution_count":138,"outputs":[{"name":"stdout","text":"Epoch 1/10\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8308 - loss: 0.3759 - val_accuracy: 0.8238 - val_loss: 0.3732\nEpoch 2/10\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8297 - loss: 0.3751 - val_accuracy: 0.8231 - val_loss: 0.3723\nEpoch 3/10\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.8321 - loss: 0.3774 - val_accuracy: 0.8219 - val_loss: 0.3716\nEpoch 4/10\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8379 - loss: 0.3655 - val_accuracy: 0.8263 - val_loss: 0.3704\nEpoch 5/10\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8231 - loss: 0.3804 - val_accuracy: 0.8250 - val_loss: 0.3692\nEpoch 6/10\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8378 - loss: 0.3751 - val_accuracy: 0.8263 - val_loss: 0.3681\nEpoch 7/10\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8306 - loss: 0.3804 - val_accuracy: 0.8225 - val_loss: 0.3674\nEpoch 8/10\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8353 - loss: 0.3734 - val_accuracy: 0.8225 - val_loss: 0.3667\nEpoch 9/10\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8386 - loss: 0.3647 - val_accuracy: 0.8238 - val_loss: 0.3664\nEpoch 10/10\n\u001b[1m200/200\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8348 - loss: 0.3674 - val_accuracy: 0.8194 - val_loss: 0.3671\n","output_type":"stream"}]},{"cell_type":"code","source":"import matplotlib.pyplot as plt\n","metadata":{"execution":{"iopub.status.busy":"2024-08-30T00:11:44.915977Z","iopub.execute_input":"2024-08-30T00:11:44.917173Z","iopub.status.idle":"2024-08-30T00:11:44.923680Z","shell.execute_reply.started":"2024-08-30T00:11:44.917104Z","shell.execute_reply":"2024-08-30T00:11:44.922136Z"},"trusted":true},"execution_count":139,"outputs":[]},{"cell_type":"code","source":"history.history","metadata":{"execution":{"iopub.status.busy":"2024-08-30T00:12:03.218594Z","iopub.execute_input":"2024-08-30T00:12:03.219938Z","iopub.status.idle":"2024-08-30T00:12:03.229036Z","shell.execute_reply.started":"2024-08-30T00:12:03.219877Z","shell.execute_reply":"2024-08-30T00:12:03.227857Z"},"trusted":true},"execution_count":140,"outputs":[{"execution_count":140,"output_type":"execute_result","data":{"text/plain":"{'accuracy': [0.8264062404632568,\n  0.8290625214576721,\n  0.8282812237739563,\n  0.8309375047683716,\n  0.8307812213897705,\n  0.83203125,\n  0.8309375047683716,\n  0.8307812213897705,\n  0.8306249976158142,\n  0.8317187428474426],\n 'loss': [0.38008537888526917,\n  0.37895479798316956,\n  0.3779757618904114,\n  0.3767893314361572,\n  0.37562450766563416,\n  0.37475329637527466,\n  0.373870849609375,\n  0.37274688482284546,\n  0.37188220024108887,\n  0.3711291551589966],\n 'val_accuracy': [0.8237500190734863,\n  0.8231250047683716,\n  0.8218749761581421,\n  0.8262500166893005,\n  0.824999988079071,\n  0.8262500166893005,\n  0.8224999904632568,\n  0.8224999904632568,\n  0.8237500190734863,\n  0.8193749785423279],\n 'val_loss': [0.37315818667411804,\n  0.37225520610809326,\n  0.3715897798538208,\n  0.37039920687675476,\n  0.36919909715652466,\n  0.36813145875930786,\n  0.36740249395370483,\n  0.3667118549346924,\n  0.36637064814567566,\n  0.3671345114707947]}"},"metadata":{}}]},{"cell_type":"code","source":"plt.plot( history.history['accuracy'])\nplt.plot( history.history['val_loss'])\nplt.plot( history.history['loss'])\nplt.plot( history.history['val_accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-08-30T00:14:50.822114Z","iopub.execute_input":"2024-08-30T00:14:50.822687Z","iopub.status.idle":"2024-08-30T00:14:51.095835Z","shell.execute_reply.started":"2024-08-30T00:14:50.822640Z","shell.execute_reply":"2024-08-30T00:14:51.094567Z"},"trusted":true},"execution_count":145,"outputs":[{"execution_count":145,"output_type":"execute_result","data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7ee1f0aa5750>]"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model.layers[0].get_weights()","metadata":{"execution":{"iopub.status.busy":"2024-08-30T00:07:12.011881Z","iopub.execute_input":"2024-08-30T00:07:12.012515Z","iopub.status.idle":"2024-08-30T00:07:12.024959Z","shell.execute_reply.started":"2024-08-30T00:07:12.012463Z","shell.execute_reply":"2024-08-30T00:07:12.023629Z"},"trusted":true},"execution_count":134,"outputs":[{"execution_count":134,"output_type":"execute_result","data":{"text/plain":"[array([[ 0.33910033, -0.09348223, -0.04407008,  0.2793108 ],\n        [ 0.20568962, -1.3834984 , -0.02427253,  0.21608597],\n        [ 0.166662  , -0.06451225, -0.07761432,  0.19160922],\n        [-0.22041585, -0.4057801 , -0.6745249 , -0.07792219],\n        [-0.38037866, -0.3189531 , -1.0984575 , -0.86544347],\n        [-0.09679885,  0.03272613, -0.06177482, -0.09744919],\n        [ 0.4166744 , -0.2038038 , -0.07969123, -0.37539136],\n        [ 0.04720257, -0.07468676, -0.04159503,  0.08995127],\n        [-0.10943927, -0.02318204,  0.33303243, -0.00985662],\n        [-0.06266533, -0.15072313, -0.01100581, -0.22061257],\n        [ 0.165254  ,  0.21575688,  0.1817666 , -0.16471207]],\n       dtype=float32),\n array([ 0.7960499 ,  1.444113  , -0.05009803, -0.18163627], dtype=float32)]"},"metadata":{}}]},{"cell_type":"code","source":"y_log= model.predict(X_test_scaled)","metadata":{"execution":{"iopub.status.busy":"2024-08-30T00:07:13.194869Z","iopub.execute_input":"2024-08-30T00:07:13.195413Z","iopub.status.idle":"2024-08-30T00:07:13.398867Z","shell.execute_reply.started":"2024-08-30T00:07:13.195363Z","shell.execute_reply":"2024-08-30T00:07:13.397469Z"},"trusted":true},"execution_count":135,"outputs":[{"name":"stdout","text":"\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"y_pred= np.where(y_log >0.5,1,0)","metadata":{"execution":{"iopub.status.busy":"2024-08-30T00:07:13.750669Z","iopub.execute_input":"2024-08-30T00:07:13.751219Z","iopub.status.idle":"2024-08-30T00:07:13.757934Z","shell.execute_reply.started":"2024-08-30T00:07:13.751165Z","shell.execute_reply":"2024-08-30T00:07:13.756225Z"},"trusted":true},"execution_count":136,"outputs":[]},{"cell_type":"code","source":"from sklearn.metrics import accuracy_score\n\naccuracy_score(Y_test,y_pred)\n","metadata":{"execution":{"iopub.status.busy":"2024-08-30T00:07:14.330955Z","iopub.execute_input":"2024-08-30T00:07:14.332281Z","iopub.status.idle":"2024-08-30T00:07:14.343366Z","shell.execute_reply.started":"2024-08-30T00:07:14.332218Z","shell.execute_reply":"2024-08-30T00:07:14.341944Z"},"trusted":true},"execution_count":137,"outputs":[{"execution_count":137,"output_type":"execute_result","data":{"text/plain":"0.832"},"metadata":{}}]},{"cell_type":"code","source":"history = ","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}